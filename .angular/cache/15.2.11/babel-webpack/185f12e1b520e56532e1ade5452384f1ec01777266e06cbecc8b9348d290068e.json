{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmComponent } from 'src/app/modules/shared/components/confirm/confirm.component';\nimport { NewCategoryComponent } from '../new-category/new-category.component';\nimport { DetailFilesComponent } from 'src/app/modules/shared/components/detailsfiles/detailsfiles.component';\nimport { ExecutefileComponent } from 'src/app/modules/shared/components/executefile/executefile.component';\nimport { TestfilesComponent } from 'src/app/modules/shared/components/testfiles/testfiles.component';\nimport { NewfilesComponent } from '../newfiles/newfiles.component';\nlet CategoryComponent = class CategoryComponent {\n  constructor(categoryService, dialog, snackBar) {\n    this.categoryService = categoryService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.displayedColumns = ['nombreArchivo', 'descripcionArchivo', 'id_Archivo', 'fecha_creacion', 'creador', 'fecha_actualizacion', 'version', 'estado', 'actions'];\n    this.dataSource = new MatTableDataSource();\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe(data => {\n      console.log(\"respuesta archivos: \", data);\n      this.processCategoriesResponse(data);\n    }, error => {\n      console.log(\"error: \", error);\n    });\n  }\n  processCategoriesResponse(resp) {\n    const dataCategory = [];\n    let listCategory = resp.body;\n    listCategory.forEach(element => {\n      dataCategory.push(element);\n    });\n    this.dataSource = new MatTableDataSource(dataCategory);\n    this.dataSource.paginator = this.paginator;\n  }\n  openCategoryDialog() {\n    const dialogRef = this.dialog.open(NewfilesComponent, {\n      width: '500px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo Agregado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al guardar el archivo\", \"Error\");\n      }\n    });\n  }\n  edit(id, name, descripcion, creador, fecha_actualizacion, version) {\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\n      width: '700px',\n      data: {\n        id: id,\n        name: name,\n        descripcion: descripcion,\n        creador,\n        fecha_actualizacion,\n        version\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo Actualizado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al actualizar el archivo\", \"Error\");\n      }\n    });\n  }\n  detail(id) {\n    const dialogRef = this.dialog.open(DetailFilesComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al ver el archivo\", \"Error\");\n      }\n    });\n  }\n  doSomething($event) {\n    $event.stopPropagation();\n  }\n  filtrarNombre(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    const regex = new RegExp(`^${filtro}`);\n    this.dataSource.filterPredicate = (data, filter) => {\n      const codigo = data.nombreArchivo.toString();\n      return regex.test(codigo);\n    };\n    this.dataSource.filter = filtro.charAt(0);\n  }\n  delete(id) {\n    const dialogRef = this.dialog.open(ConfirmComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Categoría eliminada\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al eliminar categoría\", \"Error\");\n      }\n    });\n  }\n  execute(id) {\n    const dialogRef = this.dialog.open(ExecutefileComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo ejecutado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al ejecutar el archivo\", \"Error\");\n      }\n    });\n  }\n  test(id) {\n    const dialogRef = this.dialog.open(TestfilesComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo testeado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al testear el archivo\", \"Error\");\n      }\n    });\n  }\n  buscar(termino) {\n    if (termino.length === 0) {\n      return this.getCategories();\n    } else {\n      this.categoryService.getFilesById(termino).subscribe(resp => {\n        this.processCategoriesResponse(resp);\n      });\n    }\n  }\n  openSnackBar(message, action) {\n    return this.snackBar.open(message, action, {\n      duration: 2000\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator)], CategoryComponent.prototype, \"paginator\", void 0);\nCategoryComponent = __decorate([Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})], CategoryComponent);\nexport { CategoryComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","MatPaginator","MatTableDataSource","ConfirmComponent","NewCategoryComponent","DetailFilesComponent","ExecutefileComponent","TestfilesComponent","NewfilesComponent","CategoryComponent","constructor","categoryService","dialog","snackBar","ngOnInit","getCategories","subscribe","data","console","log","processCategoriesResponse","error","resp","dataCategory","listCategory","body","forEach","element","push","dataSource","paginator","openCategoryDialog","dialogRef","open","width","afterClosed","result","openSnackBar","edit","id","name","descripcion","creador","fecha_actualizacion","version","detail","doSomething","$event","stopPropagation","filtrarNombre","event","filtro","target","value","trim","toLowerCase","regex","RegExp","filterPredicate","filter","codigo","nombreArchivo","toString","test","charAt","delete","execute","buscar","termino","length","getFilesById","message","action","duration","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\category\\category.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmComponent } from 'src/app/modules/shared/components/confirm/confirm.component';\r\nimport { CategoryService } from 'src/app/modules/shared/services/category.service';\r\nimport { NewCategoryComponent } from '../new-category/new-category.component';\r\nimport { DetailFilesComponent } from 'src/app/modules/shared/components/detailsfiles/detailsfiles.component';\r\nimport { ExecutefileComponent } from 'src/app/modules/shared/components/executefile/executefile.component';\r\nimport { TestfilesComponent } from 'src/app/modules/shared/components/testfiles/testfiles.component';\r\nimport { NewfilesComponent } from '../newfiles/newfiles.component';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent implements OnInit{\r\n\r\n  constructor(private categoryService: CategoryService,\r\n              public dialog: MatDialog, private snackBar: MatSnackBar){ }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories();\r\n  }\r\n\r\n  displayedColumns: string[] = ['nombreArchivo','descripcionArchivo','id_Archivo','fecha_creacion','creador','fecha_actualizacion'\r\n    ,'version','estado','actions'];\r\n  dataSource = new MatTableDataSource<CategoryElement>();\r\n\r\n  @ViewChild(MatPaginator)\r\n  paginator!: MatPaginator;\r\n\r\n  getCategories(){\r\n\r\n    this.categoryService.getCategories()\r\n    .subscribe( (data:any) =>{\r\n\r\n      console.log(\"respuesta archivos: \", data);\r\n      this.processCategoriesResponse(data);\r\n\r\n    }, (error:any) => {\r\n      console.log(\"error: \", error);\r\n    })\r\n  }\r\n\r\n  processCategoriesResponse(resp: any){\r\n    const dataCategory: CategoryElement[] = [];\r\n      let listCategory = resp.body;\r\n      listCategory.forEach((element: CategoryElement) => {\r\n        dataCategory.push(element);\r\n      });\r\n      this.dataSource = new MatTableDataSource<CategoryElement>(dataCategory);\r\n      this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  openCategoryDialog(){\r\n    const dialogRef = this.dialog.open(NewfilesComponent, {\r\n      width:'500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo Agregado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al guardar el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(id:number, name: string, descripcion: string, creador: string, fecha_actualizacion: Date, version: number ){\r\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\r\n      width:'700px',\r\n      data:{id: id, name: name, descripcion: descripcion, creador, fecha_actualizacion, version}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo Actualizado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al actualizar el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  detail(id:number){\r\n    const dialogRef = this.dialog.open(DetailFilesComponent, {\r\n      data:{id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      if(result==1){\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al ver el archivo\", \"Error\");\r\n      }\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  doSomething($event: any) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n  filtrarNombre(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    const regex = new RegExp(`^${filtro}`);\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const codigo = data.nombreArchivo.toString();\r\n      return regex.test(codigo);\r\n    };\r\n    this.dataSource.filter = filtro.charAt(0);\r\n  }\r\n\r\n  delete(id:any){\r\n    const dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data:{id: id}\r\n      \r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Categoría eliminada\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al eliminar categoría\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(id:any){\r\n    const dialogRef = this.dialog.open(ExecutefileComponent, {\r\n      data:{id: id}\r\n      \r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo ejecutado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al ejecutar el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  test(id:any){\r\n    const dialogRef = this.dialog.open(TestfilesComponent, {\r\n      data:{id: id}\r\n      \r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo testeado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al testear el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  buscar(termino:string){\r\n    if(termino.length === 0){\r\n      return this.getCategories();\r\n    }else{\r\n      this.categoryService.getFilesById(termino)\r\n          .subscribe((resp:any)=>{\r\n            this.processCategoriesResponse(resp);\r\n          })\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action:string) : MatSnackBarRef<SimpleSnackBar>{\r\n    return this.snackBar.open(message, action, {\r\n      duration: 2000\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport interface CategoryElement{\r\n  nombreArchivo: string;\r\n  descripcionArchivo: string;\r\n  id_Archivo: number;\r\n  fecha_creacion: Date;\r\n  creador: string;\r\n  fecha_actualizacion: Date;\r\n  version: string;\r\n  estado: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}