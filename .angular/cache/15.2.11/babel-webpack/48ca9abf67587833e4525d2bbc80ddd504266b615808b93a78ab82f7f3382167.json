{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/table\";\nfunction ColumnDefinitionsDialog_mat_header_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Field \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ColumnDefinitionsDialog_mat_cell_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.columnName, \" \");\n  }\n}\nfunction ColumnDefinitionsDialog_mat_header_cell_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Type \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ColumnDefinitionsDialog_mat_cell_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r9.columnType, \" \");\n  }\n}\nfunction ColumnDefinitionsDialog_mat_header_cell_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \" Unique \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ColumnDefinitionsDialog_mat_cell_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r10.columnUnique, \" \");\n  }\n}\nfunction ColumnDefinitionsDialog_mat_header_row_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction ColumnDefinitionsDialog_mat_row_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nexport class ColumnDefinitionsDialog {\n  constructor(dialogRef, data) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n  }\n  ngOnInit() {}\n  onEdit(column) {\n    // Implementa la lógica para editar la columna\n  }\n  onDelete(column) {\n    // Implementa la lógica para eliminar la columna\n  }\n  onClose() {\n    this.dialogRef.close();\n  }\n  static #_ = this.ɵfac = function ColumnDefinitionsDialog_Factory(t) {\n    return new (t || ColumnDefinitionsDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ColumnDefinitionsDialog,\n    selectors: [[\"app-columnsdefinition\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"columnName\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"columnType\"], [\"matColumnDef\", \"columnUnique\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n    template: function ColumnDefinitionsDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Column Definitions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-table\", 2);\n        i0.ɵɵelementContainerStart(4, 3);\n        i0.ɵɵtemplate(5, ColumnDefinitionsDialog_mat_header_cell_5_Template, 2, 0, \"mat-header-cell\", 4);\n        i0.ɵɵtemplate(6, ColumnDefinitionsDialog_mat_cell_6_Template, 2, 1, \"mat-cell\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(7, 6);\n        i0.ɵɵtemplate(8, ColumnDefinitionsDialog_mat_header_cell_8_Template, 2, 0, \"mat-header-cell\", 4);\n        i0.ɵɵtemplate(9, ColumnDefinitionsDialog_mat_cell_9_Template, 2, 1, \"mat-cell\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(10, 7);\n        i0.ɵɵtemplate(11, ColumnDefinitionsDialog_mat_header_cell_11_Template, 2, 0, \"mat-header-cell\", 4);\n        i0.ɵɵtemplate(12, ColumnDefinitionsDialog_mat_cell_12_Template, 2, 1, \"mat-cell\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(13, ColumnDefinitionsDialog_mat_header_row_13_Template, 1, 0, \"mat-header-row\", 8);\n        i0.ɵɵtemplate(14, ColumnDefinitionsDialog_mat_row_14_Template, 1, 0, \"mat-row\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ColumnDefinitionsDialog_Template_button_click_16_listener() {\n          return ctx.onClose();\n        });\n        i0.ɵɵtext(17, \"Cerrar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", ctx.data.dataSource);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.data.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.data.displayedColumns);\n      }\n    },\n    dependencies: [i2.MatButton, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAuBA,eAAe,QAAQ,0BAA0B;;;;;;;ICElEC,uCAAmC;IAACA,uBAAM;IAAAA,iBAAkB;;;;;IAC5DA,gCAAoC;IAACA,YAAuB;IAAAA,iBAAW;;;;IAAlCA,eAAuB;IAAvBA,sDAAuB;;;;;IAI5DA,uCAAmC;IAACA,sBAAK;IAAAA,iBAAkB;;;;;IAC3DA,gCAAoC;IAACA,YAAuB;IAAAA,iBAAW;;;;IAAlCA,eAAuB;IAAvBA,sDAAuB;;;;;IAI5DA,uCAAmC;IAACA,wBAAO;IAAAA,iBAAkB;;;;;IAC7DA,gCAAoC;IAACA,YAAyB;IAAAA,iBAAW;;;;IAApCA,eAAyB;IAAzBA,yDAAyB;;;;;IAGhEA,iCAA0E;;;;;IAC1EA,0BAAyE;;;ADT7E,OAAM,MAAOC,uBAAuB;EAClCC,YACSC,SAAgD,EACvBC,IAAS;IADlC,cAAS,GAATD,SAAS;IACgB,SAAI,GAAJC,IAAI;EACnC;EAEHC,QAAQ,IAER;EAEAC,MAAM,CAACC,MAAW;IAChB;EAAA;EAGFC,QAAQ,CAACD,MAAW;IAClB;EAAA;EAGFE,OAAO;IACL,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;EACxB;EAAC;qBApBUT,uBAAuB,8DAGxBF,eAAe;EAAA;EAAA;UAHdE,uBAAuB;IAAAU;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVpCf,6BAAqB;QAAAA,kCAAkB;QAAAA,iBAAK;QAC5CA,8BAAwB;QAEpBA,gCAAwC;QACtCA,gGAA4D;QAC5DA,kFAAuE;QACzEA,0BAAe;QAEfA,gCAAwC;QACtCA,gGAA2D;QAC3DA,kFAAuE;QACzEA,0BAAe;QAEfA,iCAA0C;QACxCA,kGAA6D;QAC7DA,oFAAyE;QAC3EA,0BAAe;QAEfA,gGAA0E;QAC1EA,kFAAyE;QAC3EA,iBAAY;QAEdA,gCAAwB;QACHA;UAAA,OAASgB,aAAS;QAAA,EAAC;QAAChB,uBAAM;QAAAA,iBAAS;;;QArB3CA,eAA8B;QAA9BA,gDAA8B;QAgBtBA,gBAAsC;QAAtCA,2DAAsC;QACzBA,eAA+B;QAA/BA,4DAA+B","names":["MAT_DIALOG_DATA","i0","ColumnDefinitionsDialog","constructor","dialogRef","data","ngOnInit","onEdit","column","onDelete","onClose","close","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\columnsdefinition\\columnsdefinition.component.ts","D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\columnsdefinition\\columnsdefinition.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CategoryService } from 'src/app/modules/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-columnsdefinition',\r\n  templateUrl: './columnsdefinition.component.html',\r\n  styleUrls: ['./columnsdefinition.component.css']\r\n})\r\nexport class ColumnDefinitionsDialog implements OnInit{\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ColumnDefinitionsDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  onEdit(column: any) {\r\n    // Implementa la lógica para editar la columna\r\n  }\r\n\r\n  onDelete(column: any) {\r\n    // Implementa la lógica para eliminar la columna\r\n  }\r\n\r\n  onClose(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Column Definitions</h1>\r\n<div mat-dialog-content>\r\n  <mat-table [dataSource]=\"data.dataSource\" class=\"mat-elevation-z8\">\r\n    <ng-container matColumnDef=\"columnName\">\r\n      <mat-header-cell *matHeaderCellDef> Field </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.columnName}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"columnType\">\r\n      <mat-header-cell *matHeaderCellDef> Type </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.columnType}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"columnUnique\">\r\n      <mat-header-cell *matHeaderCellDef> Unique </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\"> {{element.columnUnique}} </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"data.displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: data.displayedColumns;\"></mat-row>\r\n  </mat-table>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onClose()\">Cerrar</button>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}