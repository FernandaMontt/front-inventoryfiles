{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmComponent } from 'src/app/modules/shared/components/confirm/confirm.component';\nimport { NewCategoryComponent } from '../new-category/new-category.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/modules/shared/services/category.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nexport class CombinacionComponent {\n  constructor(categoryService, dialog, snackBar) {\n    this.categoryService = categoryService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.displayedColumns = ['id_comparacion', 'archivoNombreAarchivoNombreB', 'version', 'id_ArchivoA', 'fecha_inicio', 'creador', 'estadoArchivoB', 'porcentajeIgualAB', 'porcentajeAnotB', 'porcentajeBnotA'];\n    this.dataSource = new MatTableDataSource();\n  }\n  ngOnInit() {\n    this.getComparacion();\n  }\n  getComparacion() {\n    this.categoryService.getCategories().subscribe(data => {\n      console.log(\"respuesta archivos: \", data);\n      this.processCategoriesResponse(data);\n    }, error => {\n      console.log(\"error: \", error);\n    });\n  }\n  processCategoriesResponse(resp) {\n    const dataCategory = [];\n    let listCategory = resp.body;\n    listCategory.forEach(element => {\n      dataCategory.push(element);\n    });\n    this.dataSource = new MatTableDataSource(dataCategory);\n    this.dataSource.paginator = this.paginator;\n  }\n  openCategoryDialog() {\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\n      width: '500px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Combinación Agregada\", \"Exito\");\n        this.getComparacion();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al guardar la comparación\", \"Error\");\n      }\n    });\n  }\n  edit(id, name, descripcion) {\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\n      width: '500px',\n      data: {\n        id: id,\n        name: name,\n        descripcion: descripcion\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Combinación Actualizada\", \"Exito\");\n        this.getComparacion();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al actualizar la comparación\", \"Error\");\n      }\n    });\n  }\n  delete(id) {\n    const dialogRef = this.dialog.open(ConfirmComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Combinación eliminada\", \"Exito\");\n        this.getComparacion();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al eliminar la comparación\", \"Error\");\n      }\n    });\n  }\n  buscar(termino) {\n    if (termino.length === 0) {\n      return this.getComparacion();\n    } else {\n      this.categoryService.getCategorieById(termino).subscribe(resp => {\n        this.processCategoriesResponse(resp);\n      });\n    }\n  }\n  openSnackBar(message, action) {\n    return this.snackBar.open(message, action, {\n      duration: 2000\n    });\n  }\n  static #_ = this.ɵfac = function CombinacionComponent_Factory(t) {\n    return new (t || CombinacionComponent)(i0.ɵɵdirectiveInject(i1.CategoryService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CombinacionComponent,\n    selectors: [[\"app-combinacion\"]],\n    viewQuery: function CombinacionComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function CombinacionComponent_Template(rf, ctx) {},\n    styles: [\".alinear[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\nul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\nmat-form-field[_ngcontent-%COMP%] {\\r\\n    width: 140%;\\r\\n}\\r\\n\\r\\n.mat-cell[_ngcontent-%COMP%]:nth-child(1), .mat-header-cell[_ngcontent-%COMP%]:nth-child(1){\\r\\n    flex: 0 0 6%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9jYXRlZ29yeS9jb21wb25lbnRzL2NvbWJpbmFjaW9uL2NvbWJpbmFjaW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFdBQVc7O0FBRWY7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7O0lBRUksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uYWxpbmVhciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG51bCBsaSB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG50YWJsZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDE0MCU7XHJcbn1cclxuXHJcbi5tYXQtY2VsbDpudGgtY2hpbGQoMSksXHJcbi5tYXQtaGVhZGVyLWNlbGw6bnRoLWNoaWxkKDEpe1xyXG4gICAgZmxleDogMCAwIDYlO1xyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["MatPaginator","MatTableDataSource","ConfirmComponent","NewCategoryComponent","CombinacionComponent","constructor","categoryService","dialog","snackBar","ngOnInit","getComparacion","getCategories","subscribe","data","console","log","processCategoriesResponse","error","resp","dataCategory","listCategory","body","forEach","element","push","dataSource","paginator","openCategoryDialog","dialogRef","open","width","afterClosed","result","openSnackBar","edit","id","name","descripcion","delete","buscar","termino","length","getCategorieById","message","action","duration","selectors","viewQuery"],"sourceRoot":"","sources":["D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\combinacion\\combinacion.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmComponent } from 'src/app/modules/shared/components/confirm/confirm.component';\r\nimport { CategoryService } from 'src/app/modules/shared/services/category.service';\r\nimport { NewCategoryComponent } from '../new-category/new-category.component';\r\n\r\n@Component({\r\n  selector: 'app-combinacion',\r\n  templateUrl: './combinacion.component.html',\r\n  styleUrls: ['./combinacion.component.css']\r\n})\r\nexport class CombinacionComponent implements OnInit{\r\n\r\n  constructor(private categoryService: CategoryService,\r\n              public dialog: MatDialog, private snackBar: MatSnackBar){ }\r\n\r\n  ngOnInit(): void {\r\n    this.getComparacion();\r\n  }\r\n\r\n  displayedColumns: string[] = ['id_comparacion','archivoNombreAarchivoNombreB','version','id_ArchivoA','fecha_inicio',\r\n    'creador','estadoArchivoB','porcentajeIgualAB','porcentajeAnotB','porcentajeBnotA'];\r\n  dataSource = new MatTableDataSource<CombinancionElement>();\r\n\r\n  @ViewChild(MatPaginator)\r\n  paginator!: MatPaginator;\r\n\r\n  getComparacion(){\r\n\r\n    this.categoryService.getCategories()\r\n    .subscribe( (data:any) =>{\r\n\r\n      console.log(\"respuesta archivos: \", data);\r\n      this.processCategoriesResponse(data);\r\n\r\n    }, (error:any) => {\r\n      console.log(\"error: \", error);\r\n    })\r\n  }\r\n\r\n  processCategoriesResponse(resp: any){\r\n    const dataCategory: CombinancionElement[] = [];\r\n      let listCategory = resp.body;\r\n      listCategory.forEach((element: CombinancionElement) => {\r\n        dataCategory.push(element);\r\n      });\r\n      this.dataSource = new MatTableDataSource<CombinancionElement>(dataCategory);\r\n      this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  openCategoryDialog(){\r\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\r\n      width:'500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Combinación Agregada\",\"Exito\");\r\n        this.getComparacion();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al guardar la comparación\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(id:number, name: string, descripcion: string){\r\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\r\n      width:'500px',\r\n      data:{id: id, name: name, descripcion: descripcion}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Combinación Actualizada\",\"Exito\");\r\n        this.getComparacion();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al actualizar la comparación\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(id:any){\r\n    const dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data:{id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Combinación eliminada\",\"Exito\");\r\n        this.getComparacion();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al eliminar la comparación\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  buscar(termino:string){\r\n    if(termino.length === 0){\r\n      return this.getComparacion();\r\n    }else{\r\n      this.categoryService.getCategorieById(termino)\r\n          .subscribe((resp:any)=>{\r\n            this.processCategoriesResponse(resp);\r\n          })\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action:string) : MatSnackBarRef<SimpleSnackBar>{\r\n    return this.snackBar.open(message, action, {\r\n      duration: 2000\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport interface CombinancionElement{\r\n    id_comparacion: number;\r\n    archivoNombreAarchivoNombreB: string;\r\n    descripcionArchivo: string;\r\n    id_ArchivoA: number;\r\n    fecha_inicio: Date;\r\n    creador: string;\r\n    estadoArchivoB: boolean;\r\n    version: string;\r\n    porcentajeIgualAB: number;\r\n    porcentajeAnotB: number;\r\n    porcentajeBnotA: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}