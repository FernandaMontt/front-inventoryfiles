{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/modules/shared/services/category.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nexport class NewCategoryComponent {\n  constructor(fb, categoryService, dialogRef, data) {\n    this.fb = fb;\n    this.categoryService = categoryService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.estadoFormulario = \"\";\n    console.log(data);\n    this.estadoFormulario = \"Agregar\";\n    this.categoryForm = this.fb.group({\n      name: ['', Validators.required],\n      descripcion: ['', Validators.required]\n    });\n    if (data != null) {\n      this.updateForm(data);\n      this.estadoFormulario = \"Actualizar\";\n    }\n  }\n  ngOnInit() {}\n  onSave() {\n    let data = {\n      name: this.categoryForm.get('name')?.value,\n      descripcion: this.categoryForm.get('descripcion')?.value,\n      creador: this.categoryForm.get('creador')?.value\n    };\n    if (this.data != null) {\n      //update\n      this.categoryService.updateCategorie(data, this.data.id).subscribe(data => {\n        this.dialogRef.close(1);\n      }, error => {\n        this.dialogRef.close(2);\n      });\n    } else {\n      //create\n      this.categoryService.saveCategorie(data).subscribe(data => {\n        console.log(data);\n        this.dialogRef.close(1);\n      }, error => {\n        this.dialogRef.close(2);\n      });\n    }\n  }\n  onCancel() {\n    this.dialogRef.close(3);\n  }\n  updateForm(data) {\n    this.categoryForm = this.fb.group({\n      name: [data.name, Validators.required],\n      descripcion: [data.descripcion, Validators.required]\n    });\n  }\n  static #_ = this.ɵfac = function NewCategoryComponent_Factory(t) {\n    return new (t || NewCategoryComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewCategoryComponent,\n    selectors: [[\"app-new-category\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\"], [1, \"category-container\"], [\"matInput\", \"\", \"placeholder\", \"Nombre\", \"formControlName\", \"name\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Descripci\\u00F3n\", \"formControlName\", \"descripcion\", \"required\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function NewCategoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", 1)(4, \"div\", 2)(5, \"mat-form-field\");\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\");\n        i0.ɵɵelement(8, \"textarea\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(9, \"mat-dialog-actions\")(10, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function NewCategoryComponent_Template_button_click_10_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementStart(11, \"mat-icon\");\n        i0.ɵɵtext(12, \"save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" Guardar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function NewCategoryComponent_Template_button_click_14_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵelementStart(15, \"mat-icon\");\n        i0.ɵɵtext(16, \"cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \" Cancelar \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.estadoFormulario, \" Categor\\u00EDa \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.categoryForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", ctx.categoryForm.invalid);\n      }\n    },\n    dependencies: [i4.MatButton, i3.MatDialogTitle, i3.MatDialogContent, i3.MatDialogActions, i5.MatIcon, i6.MatInput, i7.MatFormField, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".category-container[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.category-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9jYXRlZ29yeS9jb21wb25lbnRzL25ldy1jYXRlZ29yeS9uZXctY2F0ZWdvcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuY2F0ZWdvcnktY29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5jYXRlZ29yeS1jb250YWluZXIgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","MAT_DIALOG_DATA","NewCategoryComponent","constructor","fb","categoryService","dialogRef","data","console","log","estadoFormulario","categoryForm","group","name","required","descripcion","updateForm","ngOnInit","onSave","get","value","creador","updateCategorie","id","subscribe","close","error","saveCategorie","onCancel","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\new-category\\new-category.component.ts","D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\new-category\\new-category.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { CategoryService } from 'src/app/modules/shared/services/category.service';\r\n\r\n@Component({\r\n  selector: 'app-new-category',\r\n  templateUrl: './new-category.component.html',\r\n  styleUrls: ['./new-category.component.css']\r\n})\r\nexport class NewCategoryComponent implements OnInit{\r\n\r\n  public categoryForm: FormGroup;\r\n  estadoFormulario: string = \"\";\r\n  constructor(private fb: FormBuilder, private categoryService: CategoryService,\r\n              private dialogRef: MatDialogRef<NewCategoryComponent>, \r\n              @Inject(MAT_DIALOG_DATA) public data: any){\r\n\r\n    console.log(data);\r\n    this.estadoFormulario = \"Agregar\";\r\n\r\n    this.categoryForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      descripcion: ['', Validators.required]\r\n    });\r\n\r\n    if(data != null){\r\n      this.updateForm(data);\r\n      this.estadoFormulario = \"Actualizar\";\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  onSave(){\r\n\r\n    let data = {\r\n      name: this.categoryForm.get('name')?.value,\r\n      descripcion: this.categoryForm.get('descripcion')?.value,\r\n      creador: this.categoryForm.get('creador')?.value\r\n    }\r\n\r\n    if(this.data != null){\r\n      //update\r\n      this.categoryService.updateCategorie(data, this.data.id)\r\n        .subscribe((data:any) =>{\r\n          this.dialogRef.close(1);\r\n        }, (error:any) => {\r\n          this.dialogRef.close(2);\r\n        })\r\n    }else {\r\n      //create\r\n      this.categoryService.saveCategorie(data)\r\n        .subscribe((data:any) => {\r\n          console.log(data);\r\n          this.dialogRef.close(1);\r\n        }, (error:any) => {\r\n          this.dialogRef.close(2);\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  onCancel(){\r\n    this.dialogRef.close(3);\r\n  }\r\n\r\n  updateForm(data:any){\r\n    this.categoryForm = this.fb.group({\r\n      name: [data.name, Validators.required],\r\n      descripcion: [data.descripcion, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title> {{ estadoFormulario }} Categoría </h2>\r\n<mat-dialog-content>\r\n\r\n    <form [formGroup]=\"categoryForm\">\r\n        <div class=\"category-container\">\r\n\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Nombre\" formControlName=\"name\" required/>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <textarea matInput placeholder=\"Descripción\" formControlName=\"descripcion\" required></textarea>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </form>\r\n</mat-dialog-content>\r\n\r\n\r\n<mat-dialog-actions>\r\n    <button mat-button color=\"primary\" (click)=\"onSave()\" [disabled]=\"categoryForm.invalid\">\r\n        <mat-icon>save</mat-icon> Guardar\r\n    </button>\r\n\r\n    <button mat-button color=\"primary\" (click)=\"onCancel()\">\r\n        <mat-icon>cancel</mat-icon> Cancelar\r\n    </button>\r\n\r\n</mat-dialog-actions>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}