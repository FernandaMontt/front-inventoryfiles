{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmComponent } from 'src/app/modules/shared/components/confirm/confirm.component';\nimport { NewCategoryComponent } from '../new-category/new-category.component';\nimport { DetailFilesComponent } from 'src/app/modules/shared/components/detailsfiles/detailsfiles.component';\nimport { ExecutefileComponent } from 'src/app/modules/shared/components/executefile/executefile.component';\nimport { TestfilesComponent } from 'src/app/modules/shared/components/testfiles/testfiles.component';\nimport { NewfilesComponent } from '../newfiles/newfiles.component';\nimport { MatSort } from '@angular/material/sort';\nlet FilesCreateComponent = class FilesCreateComponent {\n  constructor(categoryService, dialog, snackBar) {\n    this.categoryService = categoryService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.displayedColumns = ['id_Archivo', 'nombreArchivo', 'descripcionArchivo', 'fecha_creacion', 'owner', 'fecha_actualizacion', 'creador', 'version', 'estado', 'actions'];\n    this.dataSource = new MatTableDataSource();\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe(data => {\n      console.log(\"respuesta archivos: \", data);\n      this.processCategoriesResponse(data);\n    }, error => {\n      console.log(\"error: \", error);\n    });\n  }\n  processCategoriesResponse(resp) {\n    const dataCategory = [];\n    let listCategory = resp.body;\n    listCategory.forEach(element => {\n      dataCategory.push(element);\n    });\n    this.dataSource = new MatTableDataSource(dataCategory);\n    this.dataSource.paginator = this.paginator;\n  }\n  openCategoryDialog() {\n    const dialogRef = this.dialog.open(NewfilesComponent, {\n      width: '500px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo Agregado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al guardar el archivo\", \"Error\");\n      }\n    });\n  }\n  edit(id, name, descripcion, creador, fecha_actualizacion, version) {\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\n      width: '700px',\n      data: {\n        id: id,\n        name: name,\n        descripcion: descripcion,\n        creador,\n        fecha_actualizacion,\n        version\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo Actualizado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al actualizar el archivo\", \"Error\");\n      }\n    });\n  }\n  detail(id) {\n    const dialogRef = this.dialog.open(DetailFilesComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al ver el archivo\", \"Error\");\n      }\n    });\n  }\n  doSomething($event) {\n    $event.stopPropagation();\n  }\n  filtrarId(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const id = data.id_Archivo.toString().toLowerCase();\n      return id.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarNombre(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const nombreArchivo = data.nombreArchivo.toString().toLowerCase();\n      return nombreArchivo.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarDescripcion(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const descripcionArchivo = data.descripcionArchivo.toString().toLowerCase();\n      return descripcionArchivo.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarFechaCreacion(event) {\n    const filtro = event.target.value.trim();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const fechaCreacion = new Date(data.fecha_creacion);\n      const filtroFecha = new Date(filter);\n      return !isNaN(fechaCreacion.getTime()) && fechaCreacion >= filtroFecha;\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarOwner(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const owner = data.owner.toString().toLowerCase();\n      return owner.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarFechaModificado(event) {\n    const filtro = event.target.value.trim();\n    // Configurar el filtro personalizado para las fechas\n    this.dataSource.filterPredicate = (data, filter) => {\n      // Convertir la fecha actual de la fila a un objeto Date\n      const fechaActualizacion = new Date(data.fecha_actualizacion);\n      // Convertir el valor del filtro a un objeto Date\n      const filtroFecha = new Date(filter);\n      // Verificar si ambas fechas son válidas\n      if (!isNaN(fechaActualizacion.getTime()) && !isNaN(filtroFecha.getTime())) {\n        // Comparar las fechas (puedes ajustar según tus necesidades)\n        return fechaActualizacion.toDateString() === filtroFecha.toDateString();\n      }\n      // Si las fechas no son válidas, no coinciden\n      return false;\n    };\n    // Asignar el filtro (puede ser la cadena de fecha completa)\n    this.dataSource.filter = filtro;\n  }\n  filtrarModificadoPor(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const modificadopor = data.creador.toString().toLowerCase();\n      return modificadopor.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarVersion(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const version = data.version.toString().toLowerCase();\n      return version.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  filtrarEstado(event) {\n    const filtro = event.target.value.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data, filter) => {\n      const estado = data.estado.toString().toLowerCase();\n      return estado.includes(filter);\n    };\n    this.dataSource.filter = filtro;\n  }\n  delete(id) {\n    const dialogRef = this.dialog.open(ConfirmComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Categoría eliminada\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al eliminar categoría\", \"Error\");\n      }\n    });\n  }\n  execute(id) {\n    const dialogRef = this.dialog.open(ExecutefileComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo ejecutado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al ejecutar el archivo\", \"Error\");\n      }\n    });\n  }\n  test(id) {\n    const dialogRef = this.dialog.open(TestfilesComponent, {\n      data: {\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.openSnackBar(\"Archivo testeado\", \"Exito\");\n        this.getCategories();\n      } else if (result == 2) {\n        this.openSnackBar(\"Se produjo un error al testear el archivo\", \"Error\");\n      }\n    });\n  }\n  buscar(termino) {\n    if (termino.length === 0) {\n      return this.getCategories();\n    } else {\n      this.categoryService.getFilesById(termino).subscribe(resp => {\n        this.processCategoriesResponse(resp);\n      });\n    }\n  }\n  openSnackBar(message, action) {\n    return this.snackBar.open(message, action, {\n      duration: 2000\n    });\n  }\n};\n__decorate([ViewChild(MatSort)], FilesCreateComponent.prototype, \"sort\", void 0);\n__decorate([ViewChild(MatPaginator)], FilesCreateComponent.prototype, \"paginator\", void 0);\nFilesCreateComponent = __decorate([Component({\n  selector: 'app-filescreate',\n  templateUrl: './filescreate.component.html',\n  styleUrls: ['./filescreate.component.css']\n})], FilesCreateComponent);\nexport { FilesCreateComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","MatPaginator","MatTableDataSource","ConfirmComponent","NewCategoryComponent","DetailFilesComponent","ExecutefileComponent","TestfilesComponent","NewfilesComponent","MatSort","FilesCreateComponent","constructor","categoryService","dialog","snackBar","ngOnInit","getCategories","ngAfterViewInit","dataSource","paginator","sort","subscribe","data","console","log","processCategoriesResponse","error","resp","dataCategory","listCategory","body","forEach","element","push","openCategoryDialog","dialogRef","open","width","afterClosed","result","openSnackBar","edit","id","name","descripcion","creador","fecha_actualizacion","version","detail","doSomething","$event","stopPropagation","filtrarId","event","filtro","target","value","trim","toLowerCase","filterPredicate","filter","id_Archivo","toString","includes","filtrarNombre","nombreArchivo","filtrarDescripcion","descripcionArchivo","filtrarFechaCreacion","fechaCreacion","Date","fecha_creacion","filtroFecha","isNaN","getTime","filtrarOwner","owner","filtrarFechaModificado","fechaActualizacion","toDateString","filtrarModificadoPor","modificadopor","filtrarVersion","filtrarEstado","estado","delete","execute","test","buscar","termino","length","getFilesById","message","action","duration","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Angular\\front-inventoryfiles\\src\\app\\modules\\category\\components\\filescreate\\filescreate.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmComponent } from 'src/app/modules/shared/components/confirm/confirm.component';\r\nimport { CategoryService } from 'src/app/modules/shared/services/category.service';\r\nimport { NewCategoryComponent } from '../new-category/new-category.component';\r\nimport { DetailFilesComponent } from 'src/app/modules/shared/components/detailsfiles/detailsfiles.component';\r\nimport { ExecutefileComponent } from 'src/app/modules/shared/components/executefile/executefile.component';\r\nimport { TestfilesComponent } from 'src/app/modules/shared/components/testfiles/testfiles.component';\r\nimport { NewfilesComponent } from '../newfiles/newfiles.component';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-filescreate',\r\n  templateUrl: './filescreate.component.html',\r\n  styleUrls: ['./filescreate.component.css']\r\n})\r\nexport class FilesCreateComponent implements OnInit{\r\n\r\n  constructor(private categoryService: CategoryService,\r\n              public dialog: MatDialog, private snackBar: MatSnackBar){ }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  displayedColumns: string[] = ['id_Archivo','nombreArchivo','descripcionArchivo','fecha_creacion','owner','fecha_actualizacion','creador'\r\n    ,'version','estado','actions'];\r\n  dataSource = new MatTableDataSource<CategoryElement>();\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n\r\n  getCategories(){\r\n\r\n    this.categoryService.getCategories()\r\n    .subscribe( (data:any) =>{\r\n\r\n      console.log(\"respuesta archivos: \", data);\r\n      this.processCategoriesResponse(data);\r\n\r\n    }, (error:any) => {\r\n      console.log(\"error: \", error);\r\n    })\r\n  }\r\n\r\n  processCategoriesResponse(resp: any){\r\n    const dataCategory: CategoryElement[] = [];\r\n      let listCategory = resp.body;\r\n      listCategory.forEach((element: CategoryElement) => {\r\n        dataCategory.push(element);\r\n      });\r\n      this.dataSource = new MatTableDataSource<CategoryElement>(dataCategory);\r\n      this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  openCategoryDialog(){\r\n    const dialogRef = this.dialog.open(NewfilesComponent, {\r\n      width:'500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo Agregado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al guardar el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(id:number, name: string, descripcion: string, creador: string, fecha_actualizacion: Date, version: number ){\r\n    const dialogRef = this.dialog.open(NewCategoryComponent, {\r\n      width:'700px',\r\n      data:{id: id, name: name, descripcion: descripcion, creador, fecha_actualizacion, version}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo Actualizado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al actualizar el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  detail(id:number){\r\n    const dialogRef = this.dialog.open(DetailFilesComponent, {\r\n      data:{id: id}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      if(result==1){\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al ver el archivo\", \"Error\");\r\n      }\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  doSomething($event: any) {\r\n    $event.stopPropagation();\r\n  }\r\n\r\n  filtrarId(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const id = data.id_Archivo.toString().toLowerCase();\r\n      return id.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarNombre(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const nombreArchivo = data.nombreArchivo.toString().toLowerCase();\r\n      return nombreArchivo.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarDescripcion(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const descripcionArchivo = data.descripcionArchivo.toString().toLowerCase();\r\n      return descripcionArchivo.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarFechaCreacion(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const fechaCreacion = new Date(data.fecha_creacion);\r\n      const filtroFecha = new Date(filter);\r\n      return !isNaN(fechaCreacion.getTime()) && fechaCreacion >= filtroFecha;\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarOwner(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const owner = data.owner.toString().toLowerCase();\r\n      return owner.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarFechaModificado(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim();\r\n    // Configurar el filtro personalizado para las fechas\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      // Convertir la fecha actual de la fila a un objeto Date\r\n      const fechaActualizacion = new Date(data.fecha_actualizacion);\r\n      // Convertir el valor del filtro a un objeto Date\r\n      const filtroFecha = new Date(filter);\r\n      // Verificar si ambas fechas son válidas\r\n      if (!isNaN(fechaActualizacion.getTime()) && !isNaN(filtroFecha.getTime())) {\r\n        // Comparar las fechas (puedes ajustar según tus necesidades)\r\n        return fechaActualizacion.toDateString() === filtroFecha.toDateString();\r\n      }\r\n      // Si las fechas no son válidas, no coinciden\r\n      return false;\r\n    };\r\n    // Asignar el filtro (puede ser la cadena de fecha completa)\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarModificadoPor(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const modificadopor = data.creador.toString().toLowerCase();\r\n      return modificadopor.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarVersion(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const version = data.version.toString().toLowerCase();\r\n      return version.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  filtrarEstado(event: Event) {\r\n    const filtro = (event.target as HTMLInputElement).value.trim().toLowerCase();\r\n    this.dataSource.filterPredicate = (data, filter) => {\r\n      const estado = data.estado.toString().toLowerCase();\r\n      return estado.includes(filter);\r\n    };\r\n    this.dataSource.filter = filtro;\r\n  }\r\n\r\n  delete(id:any){\r\n    const dialogRef = this.dialog.open(ConfirmComponent, {\r\n      data:{id: id}\r\n      \r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Categoría eliminada\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al eliminar categoría\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  execute(id:any){\r\n    const dialogRef = this.dialog.open(ExecutefileComponent, {\r\n      data:{id: id}\r\n      \r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo ejecutado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al ejecutar el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  test(id:any){\r\n    const dialogRef = this.dialog.open(TestfilesComponent, {\r\n      data:{id: id}\r\n      \r\n    });\r\n\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      \r\n      if(result==1){\r\n        this.openSnackBar(\"Archivo testeado\",\"Exito\");\r\n        this.getCategories();\r\n      }else if(result==2){\r\n        this.openSnackBar(\"Se produjo un error al testear el archivo\", \"Error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  buscar(termino:string){\r\n    if(termino.length === 0){\r\n      return this.getCategories();\r\n    }else{\r\n      this.categoryService.getFilesById(termino)\r\n          .subscribe((resp:any)=>{\r\n            this.processCategoriesResponse(resp);\r\n          })\r\n    }\r\n  }\r\n\r\n  openSnackBar(message: string, action:string) : MatSnackBarRef<SimpleSnackBar>{\r\n    return this.snackBar.open(message, action, {\r\n      duration: 2000\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport interface CategoryElement{\r\n  nombreArchivo: string;\r\n  descripcionArchivo: string;\r\n  id_Archivo: number;\r\n  fecha_creacion: Date;\r\n  creador: string;\r\n  fecha_actualizacion: Date;\r\n  version: string;\r\n  estado: string;\r\n  owner: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}